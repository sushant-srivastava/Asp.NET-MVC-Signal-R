@model WebApplication5.Models.LevelModel
@{
    ViewBag.Title = "Question";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.LevelId)
    <div class="form-horizontal">
        <h4>LevelModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.Question)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.Hint)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
       <!--Script references. -->
<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<!--SignalR script to update the chat page and send messages.-->
<script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.leaderBoardHub;
            // Create a function that the hub can call back to display messages.
            chat.client.sendTopUsers = function (users) {
                // Add the message to the page.
                console.log(users);
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#btnSubmit').click(function () {
                    // Call the Send method on the hub.
                    chat.server.refreshLeaderBoard();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
</script>
    @Scripts.Render("~/bundles/jqueryval")

}
